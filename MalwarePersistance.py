import tkinter as tk
from tkinter import ttk
from tkinter import filedialog
import winreg
from StaticGUIConfigs import *

def detect_malware_persistence():
    malware_key_paths = [
        r"SOFTWARE\Microsoft\Windows\CurrentVersion\Run",
        r"SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce",
        r"SOFTWARE\Microsoft\Windows\CurrentVersion\RunServices",
        r"SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows",
    ]

    persistence_info = ""
    for key_path in malware_key_paths:
        try:
            with winreg.OpenKey(winreg.HKEY_CURRENT_USER, key_path) as key:
                for i in range(winreg.QueryInfoKey(key)[1]):
                    value_name, value_data, _ = winreg.EnumValue(key, i)
                    persistence_info += f"Key: {key_path}\nEntry: {value_name} - {value_data}\n{'-' * 40}\n"
        except FileNotFoundError:
            persistence_info += f"Registry key not found: {key_path}\n{'-' * 40}\n"
        except PermissionError:
            persistence_info += f"Permission error accessing registry key: {key_path}\n{'-' * 40}\n"
        except Exception as e:
            persistence_info += f"Error accessing registry: {e}\n{'-' * 40}\n" 

    return persistence_info

def display_malware_persistence_info(output_widget):
    malware_persistence_info = detect_malware_persistence()
    output_widget.config(state=tk.NORMAL)
    output_widget.delete("1.0", tk.END)
    output_widget.insert(tk.END, malware_persistence_info)
    output_widget.config(state=tk.DISABLED)

def export_to_file(output_text):
    file_path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text files", "*.txt")])
    if file_path:
        with open(file_path, "w") as file:
            file.write(output_text)

def malware_persistence_tool(root_window):
    root = tk.Toplevel(root_window)
    root.title("Malware Persistence Tool")
    root.resizable(False, False) # Disallow resizing of the mainWindow
    root['background']=bgColor # Set backgound color
    style = ttk.Style()
    style.configure("TButton", padding=(10, 5, 10, 5), font=('Consolas', 12))

    # Output window
    malware_persistence_output = tk.Text(root, height=20, width=1, wrap="word")
    malware_persistence_output.pack(fill=tk.X, expand=True, padx=10, pady=(0, 10))
    display_malware_persistence_info(malware_persistence_output)

    # Button to export
    export_button = tk.Button(
        root,
        text="Export to File",
        command=lambda: export_to_file(malware_persistence_output.get("1.0", tk.END)),
         background="darkgray",
        padx=10,
        pady=5)
    export_button.pack(pady=10)

    root.geometry("500x400")
    root.mainloop()

# if __name__ == "__main__":
#     malware_persistence_tool()
